#문제1
문자열 my_string이 매개변수로 주어집니다. 
my_string을 거꾸로 뒤집은 문자열을 return하도록 solution 함수를 완성해주세요.

#My answer
슬라이싱을 이용한 풀이

def solution(my_string):
    answer = my_string[::-1]
    return answer

#배운 것
다음과 같이 for문을 이용해서도 풀이할 수 있는데
"abcd"와 같은 문자열이 있다면
a, b, c, d 이런 순으로 for반복문을 돌고 
새 문자열 = a + 새 문자열('') 
새 문자열 = b + 새 문자열('a') 
새 문자열 = c + 새 문자열('ba')
새 문자열 = d + 새 문자열('cba')
과 같이 되는 원리

def solution(my_string):

		answer = ''

		for i in my_string:
    answer += i

return answer


---------------------------------------------------------------

#문제2
머쓱이는 할머니께 생신 축하 편지를 쓰려고 합니다. 
할머니가 보시기 편하도록 글자 한 자 한 자를 가로 2cm 크기로 적으려고 하며, 편지를 가로로만 적을 때, 
축하 문구 message를 적기 위해 필요한 편지지의 최소 가로길이를 return 하도록 solution 함수를 완성해주세요.

#My answer
def solution(message):
    return len(message) * 2

---------------------------------------------------------------

#문제3
선분 세 개로 삼각형을 만들기 위해서는 다음과 같은 조건을 만족해야 합니다.
가장 긴 변의 길이는 다른 두 변의 길이의 합보다 작아야 합니다.
삼각형의 세 변의 길이가 담긴 배열 sides이 매개변수로 주어집니다. 
세 변으로 삼각형을 만들 수 있다면 1, 만들 수 없다면 2를 return하도록 solution 함수를 완성해주세요.

#My answer
def solution(sides):
    
    sides.sort()
    
    if sides[0] + sides[1] > sides[2]:
        
        answer = 1
        
    else: answer = 2
    
    return answer

#배운 것
def solution(sides):
    return 1 if max(sides) < (sum(sides) - max(sides)) else 2

파이토닉한 풀이.
[if condition 한줄로 쓰기: https://dejavuqa.tistory.com/291]
[One Liner for Python if-elif-else Statements: 
https://medium.com/@epicshane/one-liner-for-python-if-elif-else-statements-d9d46016ba2a]
---------------------------------------------------------------

#문제4
정수가 담긴 리스트 num_list가 주어질 때, 
num_list의 원소 중 짝수와 홀수의 개수를 담은 배열을 return 하도록 solution 함수를 완성해보세요.

#My answer
def solution(num_list):
    num_list.sort()
    answer = [0, 0]
    
    for i in num_list:
        if i % 2 == 0:
            answer[0] += 1
        else: answer[1] += 1
       
    return answer

#배운 것
#다른 사람의 풀이1
def solution(num_list):
    answer = [0,0]
    for n in num_list:
        answer[n%2]+=1
    return answer

answer[n%2]+=1에 주목해보자.
n이 홀수이냐 짝수이냐에 따라 n%2의 값이 0 또는 1이 나오는데
그걸 배열의 접근 위치로 삼아 1씩 더해준 똑똑한 방법.
