#문제1
머쓱이네 피자가게는 피자를 일곱 조각으로 잘라 줍니다. 피자를 나눠먹을 사람의 수 n이 주어질 때, 
모든 사람이 피자를 한 조각 이상 먹기 위해 필요한 피자의 수를 return 하는 solution 함수를 완성해보세요.

#My answer 
def solution(n):
    
    if n % 7 > 0:
        answer = n // 7 + 1
    else:
        answer = n // 7
        
    return answer

#배운 것
#다른 사람의 풀이1
def solution(n):
    return (n - 1) // 7 + 1

나는 n이 1이 되거나 n이 7과 같은 피자의 개수와 딱 맞는 상황이 되는 상황을 생각해서 
if 구문을 이용해서 해결했지만 이 풀이는 n에다가 1을 뺌으로서 그 문제를 해결한 것이라 할 수 있겠다. 

#다른 사람의 풀이2
import math

def solution(n):
    return math.ceil(n/7) 

math라이브러리에서 math.ceil()함수를 이용한 풀이다.
math.ceil() 함수는 실수를 올림하여 정수로 반환하는 함수이다.

---------------------------------------------------------------

#문제2
머쓱이는 학교에서 키 순으로 줄을 설 때 몇 번째로 서야 하는지 궁금해졌습니다. 
머쓱이네 반 친구들의 키가 담긴 정수 배열 array와 머쓱이의 키 height가 매개변수로 주어질 때, 
머쓱이보다 키 큰 사람 수를 return 하도록 solution 함수를 완성해보세요.

#My answer
배열의 값이 주어진 매개변수보다 큰지 일일이 확인한 후, 그 뒤에 조건을 만족하는 배열의 요소가 있으면
count 변수를 1씩 증가시켜 주는 방식으로 풀이를 설계했다. 

def solution(array, height):

    count = 0 
    for i in array:
        if i > height:
            count += 1
            
    return count

#배운 것
#다른 사람의 풀이1
def solution(array, height):
    array.append(height)
    array.sort(reverse=True)
    return array.index(height)

.append 메소드를 이용해서 배열에 height요소를 추가하고 
그 상태로 .sort(reverse=True)를 이용해서 내림차순했다.
그 후, .index() 메소드를 이용해 height가 배열에서 몇번째 있는지 알아냈다.
몇번째 있는지가 곧 height보다 큰 요소의 개수가 되는 것을 이용한 것이다. 

---------------------------------------------------------------
