#문제1
머쓱이는 40살인 선생님이 몇 년도에 태어났는지 궁금해졌습니다. 나이 age가 주어질 때, 
2022년을 기준 출생 연도를 return 하는 solution 함수를 완성해주세요.

#My answer
def solution(age):
    answer = 2023-age
    return answer

---------------------------------------------------------------

#문제2
각에서 0도 초과 90도 미만은 예각, 90도는 직각, 90도 초과 180도 미만은 둔각 180도는 평각으로 분류합니다. 
각 angle이 매개변수로 주어질 때 예각일 때 1, 직각일 때 2, 
둔각일 때 3, 평각일 때 4를 return하도록 solution 함수를 완성해주세요.

#My answer
def solution(angle):
    answer = 0
    
    if 0 < angle < 90:
        answer = 1
        
    elif angle == 90:
        answer = 2
    
    elif 90 < angle < 180:
        answer = 3
        
    elif angle == 180:
        answer = 4
        
    return answer

#배운 것
def solution(angle):
    answer = (angle // 90) * 2 + (angle % 90 > 0) * 1
    return answer

각을 90도로 나눈 나머지가 0 또는 1이라는 것을 이용하고 비교연산자를 이용해 False True를 판단하게 해, 
answer에 값을 할당한 것이 매우 영리한 방법이라 생각함.

---------------------------------------------------------------

#문제3
머쓱이네 양꼬치 가게는 10인분을 먹으면 음료수 하나를 서비스로 줍니다. 
양꼬치는 1인분에 12,000원, 음료수는 2,000원입니다. 정수 n과 k가 매개변수로 주어졌을 때, 
양꼬치 n인분과 음료수 k개를 먹었다면 총얼마를 지불해야 하는지 return 하도록 solution 함수를 완성해보세요.

#My answer
def solution(n, k):
    answer = 12000 * n + 2000 * (k - (n // 10))     
    return answer

#배운 것
def solution(n, k):
    service = n//10
    drink = max(0, k-service)
    return (12000*n)+(2000*drink)

위와 같이 max() 를 이용해서 풀이하는 방법도 있다.
(굳이 max() 가 필요한 코드가 아니었다는 점에서 불필요한 행위를 한 것 같다.)
max() 는 인수로 받은 자료형 내에서 최대값을 찾아서 반환하는 함수이다.
주의할 점은 min(X)에서 X는 iterable한 자료형이 들어가야 하는 것이다.
iterable 이란 반복이 가능한 데이터 타입 즉, member를 하나씩 반환(접근)할 수 있는 데이터 타입을 말한다.

---------------------------------------------------------------

#문제4
정수 배열 numbers가 매개변수로 주어집니다. 
numbers의 원소의 평균값을 return하도록 solution 함수를 완성해주세요.

#My answer
우선 배열의 평균을 구해야 하므로 배열의 요소의 합을 배열의 길이로 나누어야겠다고 생각했다.
배열의 길이가 0부터 시작하는 줄 알았지만 그냥 배열의 길이를 1부터 측정한다.
for문에서 예를 들어 for i in array: 라하고 array가 배열이면 array의 i번째 속성에 접근할 수 있다.
이를 이용해서 덧셈을 할 수 있었다.

또는 sum(list)를 이용해서 배열의 합을 구한뒤 len(list)로 나누어주는 방법도 있다.
statistics라이브러리를 이용해서 statistics.mean(list)를 이용해서 평균을 바로 구할 수도 있다.

def solution(numbers):
    
    sum = 0
    for n in numbers:
        sum += n  
    
    answer = sum/len(numbers)
    
    return answer

#배운 것
#다른 사람의 풀이1
import numpy as np
def solution(numbers):
    return np.mean(numbers)

numpy라이브러리 중 np.mean()를 이용한 방법
